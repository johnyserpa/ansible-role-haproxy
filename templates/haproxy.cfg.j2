global
  log /dev/log  local0
  log /dev/log  local1 notice
{% if haproxy_socket != '' %}
  stats socket {{ haproxy_socket }} level admin
{% endif %}
{% if haproxy_chroot != '' %}
  chroot {{ haproxy_chroot }}
{% endif %}
  user {{ haproxy_user }}
  group {{ haproxy_group }}
  daemon
{% for global_var in haproxy_global_vars %}
  {{ global_var }}
{% endfor %}

defaults
  log global
  mode  http
  option  httplog
  option  dontlognull
{% if haproxy_version == '1.4' %}
    contimeout 5000
    clitimeout 50000
    srvtimeout 50000
{% else %}
    timeout connect 5000
    timeout client 50000
    timeout server 50000
{% endif %}
{% if ansible_os_family == 'Debian' %}
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http
{% endif %}
  
  stats enable
  stats uri /haproxy?stats


frontend {{ haproxy_frontend_name }}
  bind {{ haproxy_frontend_bind_address }}:{{ haproxy_frontend_port }}
  mode {{ haproxy_frontend_mode }}

  {% for site in sites %}
  acl {{ sites[site]['name'] }} hdr(host) -i {{ sites[site].main_url }}
  {% endfor %}

  {% for site in sites %}
  use_backend {{ sites[site]['name'] }}-backend if {{ sites[site]['name'] }}
  {% endfor %}

  default_backend {{ haproxy_backend_name }}

{% for site in sites %}
backend {{ sites[site]['name'] }}-backend
  mode http
  balance roundrobin
  option forwardfor
  option httpchk HEAD / HTTP/1.1\r\nHost:localhost

  {% for url in sites[site]['backend']['urls'] %}
  server {{ sites[site]['name'] }}{{ loop.index }} {{ url }}:{{ sites[site]['backend']['port'] }} cookie {{ sites[site]['name'] }}{{ loop.index }} check
  {% endfor %}

{% endfor %}